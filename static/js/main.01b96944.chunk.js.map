{"version":3,"sources":["components/conactForm/contactForm.module.css","components/contactListItem/contactListItem.module.css","components/contactList/contactList.module.css","components/conactForm/ContactForm.js","components/contactListItem/ContactListItem.js","components/contactList/ContactList.js","components/filter/Filter.js","App.js","index.js"],"names":["module","exports","ConatctForm","state","name","number","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onSubmit","this","className","styles","editForm","label","input","type","placeholder","onChange","button","Component","ContactListItem","contact","id","onDeleteContact","listItem","listItemP","listItemButton","onClick","ContactList","contacts","contactList","map","key","Filter","onChangeFilter","App","filter","addContact","uuidv4","find","alert","prevState","deleteContact","getFilteredContacts","toLowerCase","includes","changeFilter","contacstStorage","localStorage","getItem","JSON","parse","setItem","stringify","sectionTitle","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01b96944.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"contactForm_form__1ZvNi\",\"editForm\":\"contactForm_editForm__1nOml\",\"input\":\"contactForm_input__rCcXC\",\"editInput\":\"contactForm_editInput__2WinE\",\"button\":\"contactForm_button__DLNEl\",\"editButton\":\"contactForm_editButton__wLi3f\",\"label\":\"contactForm_label__3iOV8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"contactListItem_listItem__1P4lI\",\"listItemP\":\"contactListItem_listItemP__3ac2B\",\"listItemButton\":\"contactListItem_listItemButton__11amG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"contactList_contactList__1COeV\"};","import React, { Component } from 'react';\r\n// import { v4 as uuidv4 } from \"uuid\";\r\nimport styles from './contactForm.module.css';\r\nclass ConatctForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = ({target:{name, value}}) =>this.setState({[name]: value });\r\n\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    name !== \"\" && number!==\"\" && this.props.onSubmit(name, number);\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.editForm} onSubmit={this.handleSubmit}>\r\n        <label className={styles.label}>\r\n          Name*\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            placeholder=\"name\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Phone number*\r\n          <input\r\n            className={styles.input}\r\n            type=\"number\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            placeholder=\"number\"\r\n          />\r\n        </label>\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ConatctForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './contactListItem.module.css';\r\n\r\nconst ContactListItem = ({\r\n  contact: { id, name, number },\r\n  onDeleteContact,\r\n}) => {\r\n  return (\r\n    <li className={styles.listItem}>\r\n      <p className={styles.listItemP}>\r\n        name: {name} tel: {number}\r\n      </p>\r\n      <button\r\n        className={styles.listItemButton}\r\n        onClick={() => onDeleteContact(id)}\r\n        type=\"button\"\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './contactList.module.css';\r\nimport ContactListItem from '../contactListItem/ContactListItem';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={styles.contactList}>\r\n      {contacts.map(contact => (\r\n        <ContactListItem\r\n          key={contact.id}\r\n          contact={contact}\r\n          onDeleteContact={onDeleteContact}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <form>\r\n      <label>\r\n        Find contacts by name\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={e => onChangeFilter(e.target.value)}\r\n        ></input>\r\n      </label>\r\n    </form>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport ConatctForm from './components/conactForm/ContactForm';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactList from './components/contactList/ContactList';\r\nimport Filter from './components/filter/Filter';\r\nimport styles from './App.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contacstStorage = localStorage.getItem('contacts');\r\n    if (contacstStorage) {\r\n      this.setState({ contacts: JSON.parse(contacstStorage) });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  addContact = (name, number) => {\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n\r\n    this.state.contacts.find(\r\n      ({ name }) => name === contact.name && contact.name,\r\n    )\r\n      ? alert(`${contact.name} already exists`)\r\n      : this.setState(prevState => {\r\n          return {\r\n            contacts: [...prevState.contacts, contact],\r\n          };\r\n        });\r\n  };\r\n\r\n  deleteContact = id => {\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: prevState.contacts.filter(contact => contact.id !== id),\r\n      };\r\n    });\r\n  };\r\n\r\n  getFilteredContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  changeFilter = filter => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  getFilteredContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <ConatctForm onSubmit={this.addContact} />\r\n\r\n        <h2 className={styles.sectionTitle}>Contacts</h2>\r\n        {contacts.length > 1 && (\r\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\r\n        )}\r\n        <ContactList\r\n          onDeleteContact={this.deleteContact}\r\n          contacts={this.getFilteredContacts()}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}